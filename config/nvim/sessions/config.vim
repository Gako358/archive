" ~/.config/nvim/sessions/config.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 13 April 2022 at 20:09:39.
" Open this file in Vim and run :source % to restore your session.

if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'nightfox' | colorscheme nightfox | endif
call setqflist([])
let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
argglobal
%argdel
$argadd .config/awesome/rc.lua
edit .config/awesome/rc.lua
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 142 + 171) / 342)
exe '2resize ' . ((&lines * 53 + 46) / 93)
exe 'vert 2resize ' . ((&columns * 199 + 171) / 342)
exe '3resize ' . ((&lines * 36 + 46) / 93)
exe 'vert 3resize ' . ((&columns * 199 + 171) / 342)
argglobal
balt ~/.config/awesome/core/apps.lua
setlocal fdm=marker
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 37 - ((36 * winheight(0) + 45) / 90)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 37
normal! 052|
wincmd w
argglobal
if bufexists("~/.config/awesome/core/tags/init.lua") | buffer ~/.config/awesome/core/tags/init.lua | else | edit ~/.config/awesome/core/tags/init.lua | endif
if &buftype ==# 'terminal'
  silent file ~/.config/awesome/core/tags/init.lua
endif
balt ~/.config/awesome/core/apps.lua
setlocal fdm=marker
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 20 - ((19 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 20
normal! 023|
wincmd w
argglobal
if bufexists("~/.config/awesome/core/apps.lua") | buffer ~/.config/awesome/core/apps.lua | else | edit ~/.config/awesome/core/apps.lua | endif
if &buftype ==# 'terminal'
  silent file ~/.config/awesome/core/apps.lua
endif
balt ~/.config/awesome/core/tags/init.lua
setlocal fdm=marker
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 32 - ((31 * winheight(0) + 18) / 36)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 32
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 142 + 171) / 342)
exe '2resize ' . ((&lines * 53 + 46) / 93)
exe 'vert 2resize ' . ((&columns * 199 + 171) / 342)
exe '3resize ' . ((&lines * 36 + 46) / 93)
exe 'vert 3resize ' . ((&columns * 199 + 171) / 342)
tabnext 1
badd +14 .config/awesome/rc.lua
badd +32 ~/.config/awesome/core/apps.lua
badd +36 ~/.config/awesome/core/tags/init.lua
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=ifnITFstOolx
let &winminheight = s:save_winminheight
let &winminwidth = s:save_winminwidth
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

1wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
